// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Metadata {
  // Identity
  id  Int @id @default(autoincrement())
  key String @unique
  value String
}

model Theme {
  // Identity
  id Int @id @default(autoincrement())

  // Fields
  theme String @unique
  active Boolean @default(true)

  // Relations
  spaces GameSpace[]
}

model CreationSpace {
  // Identity
  id Int @id @default(autoincrement())
  // Fields
  creationDate DateTime
  color String?

  // Relations
  spaces GameSpace[]
  ideaTags IdeaTags[]
  taskTags TaskTags[]
}

model GameSpace {
  // Identity
  id Int @id @default(autoincrement())

  // Fields
  rejected Boolean @default(false)

  // Relations
  themeId Int
  theme Theme @relation(fields: [themeId], references: [id], onDelete: Cascade)
  creationSpaceId Int
  creationSpace CreationSpace @relation(fields: [creationSpaceId], references: [id], onDelete: Cascade)
  ideas Idea[]
  tasks Task[]
}

model IdeaTags {
  // Identity
  id Int @id @default(autoincrement())
  
  // Fields
  tag String
  color String?

  // Relations
  creationSpaceId Int?
  creationSpace CreationSpace? @relation(fields: [creationSpaceId], references: [id], onDelete: Cascade)
  
  // Constraints
  @@unique([creationSpaceId, tag])
}

model TaskTags {
  // Identity
  id Int @id @default(autoincrement())
  
  // Fields
  tag String
  color String?

  // Relations
  creationSpaceId Int?
  creationSpace CreationSpace? @relation(fields: [creationSpaceId], references: [id], onDelete: Cascade)
  
  // Constraints
  @@unique([creationSpaceId, tag])
}

enum IdeaCategory {
  GAMEPLAY
  STORY
  MUSIC
  DESIGN
  UIUX
  ANIMATION
}

enum TaskSpace {
  BACKLOG
  READY
  DESIGN
  DOING
  ONHOLD
  TEST
  DONE
}

model Idea {
  // Identity
  id Int @id @default(autoincrement())

  // Fields
  title String?
  content String
  category IdeaCategory
  tags String[]

  // Relations
  gameSpaceId Int
  gameSpace GameSpace @relation(fields: [gameSpaceId], references: [id])
  
  tasks Task[]
}

model Task {
  id Int @id @default(autoincrement())

  // Fields
  title String
  content String
  space TaskSpace

  // Relations
  gameSpaceId Int
  gameSpace GameSpace @relation(fields: [gameSpaceId], references: [id])
  ideaId Int?
  idea Idea? @relation(fields: [ideaId], references: [id])
}