scalar DateTimeISO

type Tag {
    tag: String!
    color: String
}

type CreationSpace {
    id: ID!
    creationDate: DateTimeISO!
    color: String

    spaces: [GameSpace!]
    ideaTags: [Tag!]
    taskTags: [Tag!]
}

type GameSpace {
    id: ID!
    rejected: Boolean

    themeId: ID
    theme: Theme
    creationSpaceID: ID
    creationSpace: CreationSpace

    ideas: [Idea!]
    # tasks: [Task!]
}

type Query {
    creationSpace(where: CreationSpaceWhere!): CreationSpace!
    gameSpace(where: GameSpaceWhere!): GameSpace!

    allCreationSpace: [CreationSpace!]!
    allGameSpaces(where: AllGameSpacesWhereInput!): [GameSpace!]!
}

type Mutation {
    createCreationSpace(data: CreateCreationSpaceInput!): CreateCreationSpaceResult!
    createGameSpace(data: CreateGameSpaceInput!): CreateGameSpaceResult!
    updateCreationSpace(where: UpdateGameSpaceWhere, data: UpdateCreationSpaceInput!): UpdateCreationSpaceResult!
    updateGameSpace(where: UpdateGameSpaceWhere, data: UpdateGameSpaceInput!): UpdateGameSpaceResult!
}

input CreateCreationSpaceInput {
    color: String
    themeIds: [ID!]!
}

input CreateGameSpaceInput {
    creationSpaceId: ID!
    themeId: ID!
}

input UpdateCreationSpaceWhere {
    id: ID!
}


input UpdateCreationSpaceInput {
    color: String
}

input UpdateGameSpaceWhere {
    id: ID!
}

input UpdateGameSpaceInput {
    rejected: Boolean
}

input CreationSpaceWhere {
    id: ID!
}

input GameSpaceWhere {
    id: ID!
}

input AllGameSpacesWhereInput {
    creationSpaceId: ID!
}

# success type for 'createCreationSpace' mutation
type CreateCreationSpaceSuccess {
    creationSpace: CreationSpace!
}

# success type for 'createGameSpace' mutation
type CreateGameSpaceSuccess {
    gameSpace: GameSpace!
}

# success type for 'updateCreationSpace' mutation
type UpdateCreationSpaceSuccess {
    creationSpace: CreationSpace!
}

# success type for 'updateGameSpace' mutation
type UpdateGameSpaceSuccess {
    gameSpace: GameSpace!
}

type CreationSpaceNotFoundError {
    message: String!
}

type GameSpaceNotFoundError {
    message: String!
}

union CreateCreationSpaceResult = CreateCreationSpaceSuccess | BadRequestError | BaseError
union CreateGameSpaceResult = CreateGameSpaceSuccess | BadRequestError | NotFoundError | BaseError
union UpdateCreationSpaceResult = UpdateCreationSpaceSuccess | CreationSpaceNotFoundError | BadRequestError | NotFoundError | BaseError
union UpdateGameSpaceResult = UpdateGameSpaceSuccess | GameSpaceNotFoundError | BadRequestError | NotFoundError | BaseError