{
	// Place your game-idea-helper workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"errortype": {
		"scope": "graphql",
		"prefix": "error",
		"body": [
			"$LINE_COMMENT error type for '$1' mutation",
			"type $2 {",
			"\tmessage: String!",
			"}"
		]
	},
	"mutationsuccesstype": {
		"scope": "graphql",
		"prefix": "mutation-success",
		"body": [
			"$LINE_COMMENT success type for '$1' mutation",
			"type ${1/^(.)(.*)$/${1:/upcase}${2}/}Success {",
			"\t$2: ${2/^(.)(.*)$/${1:/upcase}${2}/}!",
			"}"
		]
	},
	"unionresult": {
		"scope": "graphql",
		"prefix": "union-result",
		"body": [
			"union ${1/^(.)(.*)$/${1:/upcase}${2}/}Result = ${1/^(.)(.*)$/${1:/upcase}${2}/}Success ${2:| NotFoundError} ${3:| }| BadRequestError | BaseError"
		]
	}
}